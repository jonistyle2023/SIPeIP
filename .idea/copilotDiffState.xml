<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/react-app/src/shared/components/Header.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/react-app/src/shared/components/Header.jsx" />
              <option name="originalContent" value="import React, {useState, useEffect} from 'react';&#10;import {FiCalendar, FiMenu, FiX} from 'react-icons/fi';&#10;import {LogOut} from 'lucide-react';&#10;&#10;const Header = ({user, onLogout, pageTitle, onOpenSidebar, sidebarOpen}) =&gt; {&#10;    const [menuOpen, setMenuOpen] = useState(false);&#10;    const [isSidebarOpen, setIsSidebarOpen] = useState(false);&#10;    const dateString = new Date().toLocaleDateString();&#10;&#10;    useEffect(() =&gt; {&#10;        if (typeof sidebarOpen === 'boolean') setIsSidebarOpen(sidebarOpen);&#10;    }, [sidebarOpen]);&#10;&#10;    return (&#10;        &lt;header className=&quot;flex items-center justify-between p-4 bg-white shadow-md relative z-[70] pl-12&quot;&gt;&#10;            &lt;button&#10;                className=&quot;absolute left-3 top-1/2 -translate-y-1/2 z-[80] text-gray-700 bg-white border shadow rounded-full p-2.5 transition-colors hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500&quot;&#10;                onClick={() =&gt; {&#10;                    onOpenSidebar?.();&#10;                    setIsSidebarOpen(v =&gt; !v);&#10;                }}&#10;                aria-label={isSidebarOpen ? 'Ocultar menú lateral' : 'Abrir menú lateral'}&#10;                aria-pressed={isSidebarOpen}&#10;            &gt;&#10;                {isSidebarOpen ? (&#10;                    &lt;FiX size={20} className=&quot;transition-transform duration-200 rotate-90 scale-110&quot;/&gt;&#10;                ) : (&#10;                    &lt;FiMenu size={20} className=&quot;transition-transform duration-200&quot;/&gt;&#10;                )}&#10;            &lt;/button&gt;&#10;            &lt;div&gt;&#10;                &lt;h2 className=&quot;text-2xl font-semibold text-gray-800&quot;&gt;{pageTitle}&lt;/h2&gt;&#10;                &lt;p className=&quot;text-sm text-gray-500&quot;&gt;Seguimiento integral de planificación e inversión pública&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;button&#10;                className=&quot;lg:hidden ml-2 text-gray-700&quot;&#10;                onClick={() =&gt; setMenuOpen(!menuOpen)}&#10;                aria-label=&quot;Abrir menú de usuario&quot;&#10;            &gt;&#10;                {menuOpen ? &lt;FiX size={24}/&gt; : &lt;FiMenu size={24}/&gt;}&#10;            &lt;/button&gt;&#10;            &lt;div className=&quot;hidden lg:flex items-center space-x-4&quot;&gt;&#10;                &lt;div className=&quot;flex items-center px-3 py-2 bg-gray-100 rounded-md&quot;&gt;&#10;                    &lt;FiCalendar className=&quot;text-gray-600&quot;/&gt;&#10;                    &lt;span className=&quot;ml-2 text-sm font-medium text-gray-700 hidden sm:block&quot;&gt;{dateString}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-10 h-10 bg-gray-300 rounded-full&quot;&gt;&lt;/div&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p className=&quot;font-semibold text-sm text-gray-800&quot;&gt;{user?.nombre_usuario || 'Usuario'}&lt;/p&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-500&quot;&gt;{user?.roles?.join(', ') || 'Rol'}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;LogOut size={20} className=&quot;text-gray-600 cursor-pointer&quot; onClick={onLogout}/&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            {menuOpen &amp;&amp; (&#10;                &lt;div&#10;                    className=&quot;absolute top-full right-0 w-64 bg-white shadow-lg rounded-lg p-4 flex flex-col space-y-4 lg:hidden z-50&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center&quot;&gt;&#10;                        &lt;FiCalendar className=&quot;text-gray-600&quot;/&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm font-medium text-gray-700&quot;&gt;{dateString}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                        &lt;div className=&quot;w-10 h-10 bg-gray-300 rounded-full&quot;&gt;&lt;/div&gt;&#10;                        &lt;div&gt;&#10;                            &lt;p className=&quot;font-semibold text-sm text-gray-800&quot;&gt;{user?.nombre_usuario || 'Usuario'}&lt;/p&gt;&#10;                            &lt;p className=&quot;text-xs text-gray-500&quot;&gt;{user?.roles?.join(', ') || 'Rol'}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;LogOut size={20} className=&quot;text-gray-600 cursor-pointer&quot; onClick={onLogout}/&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            )}&#10;        &lt;/header&gt;&#10;    );&#10;};&#10;&#10;export default Header;" />
              <option name="updatedContent" value="import React, {useState, useEffect} from 'react';&#10;import {FiCalendar, FiMenu, FiX} from 'react-icons/fi';&#10;import {LogOut} from 'lucide-react';&#10;&#10;const Header = ({user, onLogout, pageTitle, onOpenSidebar, sidebarOpen}) =&gt; {&#10;    const [menuOpen, setMenuOpen] = useState(false);&#10;    const [isSidebarOpen, setIsSidebarOpen] = useState(false);&#10;    const dateString = new Date().toLocaleDateString();&#10;&#10;    useEffect(() =&gt; {&#10;        if (typeof sidebarOpen === 'boolean') setIsSidebarOpen(sidebarOpen);&#10;    }, [sidebarOpen]);&#10;&#10;    return (&#10;        &lt;header className=&quot;flex items-center justify-between p-4 bg-white shadow-md relative z-[70]&quot;&gt;&#10;            &lt;div className=&quot;flex items-center gap-3&quot;&gt;&#10;                &lt;button&#10;                    className=&quot;text-gray-700 bg-white border shadow rounded-full p-2.5 transition-colors hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500&quot;&#10;                    onClick={() =&gt; {&#10;                        onOpenSidebar?.();&#10;                        setIsSidebarOpen(v =&gt; !v);&#10;                    }}&#10;                    aria-label={isSidebarOpen ? 'Ocultar menú lateral' : 'Abrir menú lateral'}&#10;                    aria-pressed={isSidebarOpen}&#10;                &gt;&#10;                    {isSidebarOpen ? (&#10;                        &lt;FiX size={20} className=&quot;transition-transform duration-200 rotate-90 scale-110&quot;/&gt;&#10;                    ) : (&#10;                        &lt;FiMenu size={20} className=&quot;transition-transform duration-200&quot;/&gt;&#10;                    )}&#10;                &lt;/button&gt;&#10;                &lt;div&gt;&#10;                    &lt;h2 className=&quot;text-2xl font-semibold text-gray-800&quot;&gt;{pageTitle}&lt;/h2&gt;&#10;                    &lt;p className=&quot;text-sm text-gray-500&quot;&gt;Seguimiento integral de planificación e inversión pública&lt;/p&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            &lt;button&#10;                className=&quot;lg:hidden ml-2 text-gray-700&quot;&#10;                onClick={() =&gt; setMenuOpen(!menuOpen)}&#10;                aria-label=&quot;Abrir menú de usuario&quot;&#10;            &gt;&#10;                {menuOpen ? &lt;FiX size={24}/&gt; : &lt;FiMenu size={24}/&gt;}&#10;            &lt;/button&gt;&#10;            &lt;div className=&quot;hidden lg:flex items-center space-x-4&quot;&gt;&#10;                &lt;div className=&quot;flex items-center px-3 py-2 bg-gray-100 rounded-md&quot;&gt;&#10;                    &lt;FiCalendar className=&quot;text-gray-600&quot;/&gt;&#10;                    &lt;span className=&quot;ml-2 text-sm font-medium text-gray-700 hidden sm:block&quot;&gt;{dateString}&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                    &lt;div className=&quot;w-10 h-10 bg-gray-300 rounded-full&quot;&gt;&lt;/div&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p className=&quot;font-semibold text-sm text-gray-800&quot;&gt;{user?.nombre_usuario || 'Usuario'}&lt;/p&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-500&quot;&gt;{user?.roles?.join(', ') || 'Rol'}&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;LogOut size={20} className=&quot;text-gray-600 cursor-pointer&quot; onClick={onLogout}/&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;            {menuOpen &amp;&amp; (&#10;                &lt;div className=&quot;absolute top-full right-0 w-64 bg-white shadow-lg rounded-lg p-4 flex flex-col space-y-4 lg:hidden z-50&quot;&gt;&#10;                    &lt;div className=&quot;flex items-center&quot;&gt;&#10;                        &lt;FiCalendar className=&quot;text-gray-600&quot;/&gt;&#10;                        &lt;span className=&quot;ml-2 text-sm font-medium text-gray-700&quot;&gt;{dateString}&lt;/span&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div className=&quot;flex items-center space-x-2&quot;&gt;&#10;                        &lt;div className=&quot;w-10 h-10 bg-gray-300 rounded-full&quot;&gt;&lt;/div&gt;&#10;                        &lt;div&gt;&#10;                            &lt;p className=&quot;font-semibold text-sm text-gray-800&quot;&gt;{user?.nombre_usuario || 'Usuario'}&lt;/p&gt;&#10;                            &lt;p className=&quot;text-xs text-gray-500&quot;&gt;{user?.roles?.join(', ') || 'Rol'}&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                        &lt;LogOut size={20} className=&quot;text-gray-600 cursor-pointer&quot; onClick={onLogout}/&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            )}&#10;        &lt;/header&gt;&#10;    );&#10;};&#10;&#10;export default Header;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/react-app/src/shared/components/Sidebar.jsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/react-app/src/shared/components/Sidebar.jsx" />
              <option name="originalContent" value="import React, {useState, useEffect} from 'react';&#10;import {&#10;    LayoutDashboard,&#10;    FileText,&#10;    DollarSign,&#10;    BarChart2,&#10;    Settings,&#10;    Shield,&#10;    ChevronDown,&#10;    ChevronRight,&#10;    Dot,&#10;    CheckSquare&#10;} from 'lucide-react';&#10;&#10;export default function Sidebar({activePage, setActivePage, sidebarOpen, setSidebarOpen}) {&#10;    const [openSubmenus, setOpenSubmenus] = useState({});&#10;&#10;    const toggleSubmenu = (menu) =&gt; {&#10;        setOpenSubmenus((prev) =&gt; ({&#10;            ...prev,&#10;            [menu]: !prev[menu],&#10;        }));&#10;    };&#10;&#10;    const menuItems = [&#10;        {name: 'Panel Principal', icon: LayoutDashboard},&#10;        {name: 'Planificación', icon: FileText},&#10;        {name: 'Inversión', icon: DollarSign},&#10;        {name: 'Priorización PAI', icon: CheckSquare},&#10;        {&#10;            name: 'Seguimiento',&#10;            icon: BarChart2,&#10;            subItems: ['Seguimiento a la Planificación', 'Seguimiento a la Inversión', 'Seguimiento a obras', 'Seguimiento a Cierre y Baja de Proyectos']&#10;        },&#10;        {name: 'Reportería', icon: FileText},&#10;        {name: 'Configuración', icon: Settings, subItems: ['Usuarios', 'Institucional']},&#10;        {name: 'Auditoría', icon: Shield},&#10;    ];&#10;&#10;    // Empuja el contenido en escritorio cuando el sidebar está abierto&#10;    useEffect(() =&gt; {&#10;        const updatePadding = () =&gt; {&#10;            const isDesktop = window.innerWidth &gt;= 1024; // breakpoint lg&#10;            if (isDesktop &amp;&amp; sidebarOpen) {&#10;                document.body.style.paddingLeft = '16rem'; // w-64&#10;            } else {&#10;                document.body.style.paddingLeft = '';&#10;            }&#10;        };&#10;        updatePadding();&#10;        window.addEventListener('resize', updatePadding);&#10;        return () =&gt; {&#10;            window.removeEventListener('resize', updatePadding);&#10;            document.body.style.paddingLeft = '';&#10;        };&#10;    }, [sidebarOpen]);&#10;&#10;    return (&#10;        &lt;&gt;&#10;            &lt;div&#10;                className={`bg-white shadow-md w-64 flex flex-col z-40 transition-transform duration-300&#10;                ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'} fixed top-0 left-0 h-screen overflow-y-auto pt-20`}&#10;            &gt;&#10;                &lt;div className=&quot;p-4 flex items-center&quot;&gt;&#10;                    &lt;img src=&quot;./src/app/assets/images/logo.png&quot; alt=&quot;Logo SIPeIP&quot;&#10;                         className=&quot;w-10 h-10 rounded-full mr-3 object-cover&quot;/&gt;&#10;                    &lt;div&gt;&#10;                        &lt;h1 className=&quot;text-xl font-bold text-gray-800&quot;&gt;SIPeIP&lt;/h1&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-500&quot;&gt;Sistema de Planificación&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;nav className=&quot;flex-1 p-4 space-y-2&quot;&gt;&#10;                    {menuItems.map((item) =&gt; {&#10;                        const isParentActive = item.name === 'Configuración' &amp;&amp; (activePage === 'Usuarios' || activePage === 'Institucional');&#10;                        return (&#10;                            &lt;div key={item.name}&gt;&#10;                                &lt;a&#10;                                    href=&quot;#&quot;&#10;                                    onClick={(e) =&gt; {&#10;                                        e.preventDefault();&#10;                                        if (item.subItems) {&#10;                                            toggleSubmenu(item.name);&#10;                                        } else {&#10;                                            setActivePage(item.name);&#10;                                        }&#10;                                    }}&#10;                                    className={`flex items-center p-2 rounded-lg transition-colors ${&#10;                                        activePage === item.name || isParentActive&#10;                                            ? 'bg-blue-500 text-white shadow-sm'&#10;                                            : 'text-gray-600 hover:bg-gray-100'&#10;                                    }`}&#10;                                &gt;&#10;                                    &lt;item.icon className=&quot;w-5 h-5 mr-3&quot;/&gt;&#10;                                    &lt;span className=&quot;flex-1&quot;&gt;{item.name}&lt;/span&gt;&#10;                                    {item.subItems &amp;&amp; (openSubmenus[item.name] ? &lt;ChevronDown size={16}/&gt; :&#10;                                        &lt;ChevronRight size={16}/&gt;)}&#10;                                &lt;/a&gt;&#10;                                {item.subItems &amp;&amp; openSubmenus[item.name] &amp;&amp; (&#10;                                    &lt;div className=&quot;pl-8 mt-1 space-y-1&quot;&gt;&#10;                                        {item.subItems.map((subItem) =&gt; (&#10;                                            &lt;a&#10;                                                href=&quot;#&quot;&#10;                                                key={subItem}&#10;                                                onClick={(e) =&gt; {&#10;                                                    e.preventDefault();&#10;                                                    setActivePage(subItem);&#10;                                                }}&#10;                                                className={`flex items-center text-sm p-2 rounded-lg transition-colors ${&#10;                                                    activePage === subItem&#10;                                                        ? 'bg-blue-100 text-blue-600'&#10;                                                        : 'text-gray-500 hover:bg-gray-100'&#10;                                                }`}&#10;                                            &gt;&#10;                                                &lt;Dot size={16} className=&quot;mr-2&quot;/&gt;&#10;                                                {subItem}&#10;                                            &lt;/a&gt;&#10;                                        ))}&#10;                                    &lt;/div&gt;&#10;                                )}&#10;                            &lt;/div&gt;&#10;                        );&#10;                    })}&#10;                &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;        &lt;/&gt;&#10;    );&#10;}" />
              <option name="updatedContent" value="import React, {useState, useEffect} from 'react';&#10;import {&#10;    LayoutDashboard,&#10;    FileText,&#10;    DollarSign,&#10;    BarChart2,&#10;    Settings,&#10;    Shield,&#10;    ChevronDown,&#10;    ChevronRight,&#10;    Dot,&#10;    CheckSquare&#10;} from 'lucide-react';&#10;&#10;export default function Sidebar({activePage, setActivePage, sidebarOpen, setSidebarOpen}) {&#10;    const [openSubmenus, setOpenSubmenus] = useState({});&#10;&#10;    const toggleSubmenu = (menu) =&gt; {&#10;        setOpenSubmenus((prev) =&gt; ({&#10;            ...prev,&#10;            [menu]: !prev[menu],&#10;        }));&#10;    };&#10;&#10;    const menuItems = [&#10;        {name: 'Panel Principal', icon: LayoutDashboard},&#10;        {name: 'Planificación', icon: FileText},&#10;        {name: 'Inversión', icon: DollarSign},&#10;        {name: 'Priorización PAI', icon: CheckSquare},&#10;        {&#10;            name: 'Seguimiento',&#10;            icon: BarChart2,&#10;            subItems: ['Seguimiento a la Planificación', 'Seguimiento a la Inversión', 'Seguimiento a obras', 'Seguimiento a Cierre y Baja de Proyectos']&#10;        },&#10;        {name: 'Reportería', icon: FileText},&#10;        {name: 'Configuración', icon: Settings, subItems: ['Usuarios', 'Institucional']},&#10;        {name: 'Auditoría', icon: Shield},&#10;    ];&#10;&#10;    // Empuja el contenido en escritorio cuando el sidebar está abierto&#10;    useEffect(() =&gt; {&#10;        const updatePadding = () =&gt; {&#10;            const isDesktop = window.innerWidth &gt;= 1024; // breakpoint lg&#10;            if (isDesktop &amp;&amp; sidebarOpen) {&#10;                document.body.style.paddingLeft = '16rem'; // w-64&#10;            } else {&#10;                document.body.style.paddingLeft = '';&#10;            }&#10;        };&#10;        updatePadding();&#10;        window.addEventListener('resize', updatePadding);&#10;        return () =&gt; {&#10;            window.removeEventListener('resize', updatePadding);&#10;            document.body.style.paddingLeft = '';&#10;        };&#10;    }, [sidebarOpen]);&#10;&#10;    return (&#10;        &lt;&gt;&#10;            &lt;div&#10;                className={`bg-white shadow-md w-64 flex flex-col z-40 transition-transform duration-300&#10;                ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'} fixed top-0 left-0 h-screen overflow-y-auto`}&#10;            &gt;&#10;                &lt;div className=&quot;p-4 flex items-center&quot;&gt;&#10;                    &lt;img src=&quot;./src/app/assets/images/logo.png&quot; alt=&quot;Logo SIPeIP&quot;&#10;                         className=&quot;w-10 h-10 rounded-full mr-3 object-cover&quot;/&gt;&#10;                    &lt;div&gt;&#10;                        &lt;h1 className=&quot;text-xl font-bold text-gray-800&quot;&gt;SIPeIP&lt;/h1&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-500&quot;&gt;Sistema de Planificación&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;nav className=&quot;flex-1 p-4 space-y-2&quot;&gt;&#10;                    {menuItems.map((item) =&gt; {&#10;                        const isParentActive = item.name === 'Configuración' &amp;&amp; (activePage === 'Usuarios' || activePage === 'Institucional');&#10;                        return (&#10;                            &lt;div key={item.name}&gt;&#10;                                &lt;a&#10;                                    href=&quot;#&quot;&#10;                                    onClick={(e) =&gt; {&#10;                                        e.preventDefault();&#10;                                        if (item.subItems) {&#10;                                            toggleSubmenu(item.name);&#10;                                        } else {&#10;                                            setActivePage(item.name);&#10;                                        }&#10;                                    }}&#10;                                    className={`flex items-center p-2 rounded-lg transition-colors ${&#10;                                        activePage === item.name || isParentActive&#10;                                            ? 'bg-blue-500 text-white shadow-sm'&#10;                                            : 'text-gray-600 hover:bg-gray-100'&#10;                                    }`}&#10;                                &gt;&#10;                                    &lt;item.icon className=&quot;w-5 h-5 mr-3&quot;/&gt;&#10;                                    &lt;span className=&quot;flex-1&quot;&gt;{item.name}&lt;/span&gt;&#10;                                    {item.subItems &amp;&amp; (openSubmenus[item.name] ? &lt;ChevronDown size={16}/&gt; :&#10;                                        &lt;ChevronRight size={16}/&gt;)}&#10;                                &lt;/a&gt;&#10;                                {item.subItems &amp;&amp; openSubmenus[item.name] &amp;&amp; (&#10;                                    &lt;div className=&quot;pl-8 mt-1 space-y-1&quot;&gt;&#10;                                        {item.subItems.map((subItem) =&gt; (&#10;                                            &lt;a&#10;                                                href=&quot;#&quot;&#10;                                                key={subItem}&#10;                                                onClick={(e) =&gt; {&#10;                                                    e.preventDefault();&#10;                                                    setActivePage(subItem);&#10;                                                }}&#10;                                                className={`flex items-center text-sm p-2 rounded-lg transition-colors ${&#10;                                                    activePage === subItem&#10;                                                        ? 'bg-blue-100 text-blue-600'&#10;                                                        : 'text-gray-500 hover:bg-gray-100'&#10;                                                }`}&#10;                                            &gt;&#10;                                                &lt;Dot size={16} className=&quot;mr-2&quot;/&gt;&#10;                                                {subItem}&#10;                                            &lt;/a&gt;&#10;                                        ))}&#10;                                    &lt;/div&gt;&#10;                                )}&#10;                            &lt;/div&gt;&#10;                        );&#10;                    })}&#10;                &lt;/nav&gt;&#10;            &lt;/div&gt;&#10;        &lt;/&gt;&#10;    );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>